// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// PlaylistsColumns holds the columns for the "playlists" table.
	PlaylistsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Size: 255},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_playlists", Type: field.TypeInt, Nullable: true},
	}
	// PlaylistsTable holds the schema information for the "playlists" table.
	PlaylistsTable = &schema.Table{
		Name:       "playlists",
		Columns:    PlaylistsColumns,
		PrimaryKey: []*schema.Column{PlaylistsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "playlists_users_playlists",
				Columns:    []*schema.Column{PlaylistsColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SessionsColumns holds the columns for the "sessions" table.
	SessionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "token", Type: field.TypeString, Unique: true},
		{Name: "ip_address", Type: field.TypeString, Nullable: true},
		{Name: "user_agent", Type: field.TypeString, Nullable: true},
		{Name: "expires_at", Type: field.TypeTime},
		{Name: "last_login_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "spotify_access_token", Type: field.TypeString, Nullable: true},
		{Name: "spotify_refresh_token", Type: field.TypeString, Nullable: true},
		{Name: "spotify_expiry", Type: field.TypeTime, Nullable: true},
		{Name: "user_sessions", Type: field.TypeInt, Nullable: true},
	}
	// SessionsTable holds the schema information for the "sessions" table.
	SessionsTable = &schema.Table{
		Name:       "sessions",
		Columns:    SessionsColumns,
		PrimaryKey: []*schema.Column{SessionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sessions_users_sessions",
				Columns:    []*schema.Column{SessionsColumns[10]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TracksColumns holds the columns for the "tracks" table.
	TracksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "artist", Type: field.TypeString},
		{Name: "img_small_url", Type: field.TypeString, Nullable: true},
		{Name: "img_medium_url", Type: field.TypeString, Nullable: true},
		{Name: "img_large_url", Type: field.TypeString, Nullable: true},
		{Name: "release_date", Type: field.TypeTime},
		{Name: "spotify_id", Type: field.TypeString, Unique: true, Size: 2147483647},
		{Name: "duration_ms", Type: field.TypeInt},
		{Name: "preview_url", Type: field.TypeString, Nullable: true},
		{Name: "popularity", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
	}
	// TracksTable holds the schema information for the "tracks" table.
	TracksTable = &schema.Table{
		Name:       "tracks",
		Columns:    TracksColumns,
		PrimaryKey: []*schema.Column{TracksColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "username", Type: field.TypeString, Unique: true, Size: 64},
		{Name: "password_hash", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// PlaylistTracksColumns holds the columns for the "playlist_tracks" table.
	PlaylistTracksColumns = []*schema.Column{
		{Name: "playlist_id", Type: field.TypeInt},
		{Name: "track_id", Type: field.TypeInt},
	}
	// PlaylistTracksTable holds the schema information for the "playlist_tracks" table.
	PlaylistTracksTable = &schema.Table{
		Name:       "playlist_tracks",
		Columns:    PlaylistTracksColumns,
		PrimaryKey: []*schema.Column{PlaylistTracksColumns[0], PlaylistTracksColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "playlist_tracks_playlist_id",
				Columns:    []*schema.Column{PlaylistTracksColumns[0]},
				RefColumns: []*schema.Column{PlaylistsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "playlist_tracks_track_id",
				Columns:    []*schema.Column{PlaylistTracksColumns[1]},
				RefColumns: []*schema.Column{TracksColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		PlaylistsTable,
		SessionsTable,
		TracksTable,
		UsersTable,
		PlaylistTracksTable,
	}
)

func init() {
	PlaylistsTable.ForeignKeys[0].RefTable = UsersTable
	SessionsTable.ForeignKeys[0].RefTable = UsersTable
	PlaylistTracksTable.ForeignKeys[0].RefTable = PlaylistsTable
	PlaylistTracksTable.ForeignKeys[1].RefTable = TracksTable
}
