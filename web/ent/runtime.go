// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/Pineapple217/Sortify/web/ent/playlist"
	"github.com/Pineapple217/Sortify/web/ent/schema"
	"github.com/Pineapple217/Sortify/web/ent/session"
	"github.com/Pineapple217/Sortify/web/ent/track"
	"github.com/Pineapple217/Sortify/web/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	playlistFields := schema.Playlist{}.Fields()
	_ = playlistFields
	// playlistDescName is the schema descriptor for name field.
	playlistDescName := playlistFields[0].Descriptor()
	// playlist.NameValidator is a validator for the "name" field. It is called by the builders before save.
	playlist.NameValidator = func() func(string) error {
		validators := playlistDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// playlistDescCreatedAt is the schema descriptor for created_at field.
	playlistDescCreatedAt := playlistFields[1].Descriptor()
	// playlist.DefaultCreatedAt holds the default value on creation for the created_at field.
	playlist.DefaultCreatedAt = playlistDescCreatedAt.Default.(func() time.Time)
	// playlistDescUpdatedAt is the schema descriptor for updated_at field.
	playlistDescUpdatedAt := playlistFields[2].Descriptor()
	// playlist.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	playlist.DefaultUpdatedAt = playlistDescUpdatedAt.Default.(func() time.Time)
	// playlist.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	playlist.UpdateDefaultUpdatedAt = playlistDescUpdatedAt.UpdateDefault.(func() time.Time)
	sessionFields := schema.Session{}.Fields()
	_ = sessionFields
	// sessionDescCreatedAt is the schema descriptor for created_at field.
	sessionDescCreatedAt := sessionFields[5].Descriptor()
	// session.DefaultCreatedAt holds the default value on creation for the created_at field.
	session.DefaultCreatedAt = sessionDescCreatedAt.Default.(func() time.Time)
	trackFields := schema.Track{}.Fields()
	_ = trackFields
	// trackDescDurationMs is the schema descriptor for duration_ms field.
	trackDescDurationMs := trackFields[7].Descriptor()
	// track.DurationMsValidator is a validator for the "duration_ms" field. It is called by the builders before save.
	track.DurationMsValidator = trackDescDurationMs.Validators[0].(func(int) error)
	// trackDescCreatedAt is the schema descriptor for created_at field.
	trackDescCreatedAt := trackFields[10].Descriptor()
	// track.DefaultCreatedAt holds the default value on creation for the created_at field.
	track.DefaultCreatedAt = trackDescCreatedAt.Default.(func() time.Time)
	// trackDescUpdatedAt is the schema descriptor for updated_at field.
	trackDescUpdatedAt := trackFields[11].Descriptor()
	// track.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	track.DefaultUpdatedAt = trackDescUpdatedAt.Default.(func() time.Time)
	// track.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	track.UpdateDefaultUpdatedAt = trackDescUpdatedAt.UpdateDefault.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUsername is the schema descriptor for username field.
	userDescUsername := userFields[0].Descriptor()
	// user.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	user.UsernameValidator = func() func(string) error {
		validators := userDescUsername.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(username string) error {
			for _, fn := range fns {
				if err := fn(username); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// userDescPasswordHash is the schema descriptor for password_hash field.
	userDescPasswordHash := userFields[1].Descriptor()
	// user.PasswordHashValidator is a validator for the "password_hash" field. It is called by the builders before save.
	user.PasswordHashValidator = userDescPasswordHash.Validators[0].(func(string) error)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[2].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[3].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
}
